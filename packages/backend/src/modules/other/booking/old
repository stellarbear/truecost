
    @Mutation(() => String)
    async BookingTest(
        @Ctx() ctx: Context,
    ) {
        const clientId = "ASFQP0-fmmeTUQAdfRTutwcNzD9vx_ijLEt1uEP-CNk6suUj73NM0wVXzrlt0mO0dLCcfARt-T8YuS7o";
        const clientSecret = "EJDlGhFmkm17Fopzr9LwGVjuzSKCoj0U6gQ1WpFf4xuWkzrxQbjSR3-ObevxGDUFPuKiCJ2aEVw7X1p1";
        const environment = new paypal.core.SandboxEnvironment(clientId, clientSecret);
        const client = new paypal.core.PayPalHttpClient(environment);

        const request = new paypal.orders.OrdersCreateRequest();
        request.requestBody({
            "intent": "CAPTURE",
            "purchase_units": [
                {
                    "amount": {
                        "currency_code": "USD",
                        "value": "20",
                        "breakdown": {
                            "item_total": {
                                "value": '30',
                                "currency_code": "USD",
                            },
                            "discount": {
                                "currency_code": "USD",
                                "value": "10.00",
                            },
                        },
                    },
                    "items": [{
                        "name": "item 1",
                        "unit_amount": {
                            "currency_code": "USD",
                            "value": "10",
                        },
                        "quantity": 1,
                    }, {
                        "name": "item 2",
                        "unit_amount": {
                            "currency_code": "USD",
                            "value": "10",
                        },
                        "quantity": 2,
                    }],
                },
            ],
            "application_context": {
                locale: "en-US",
                landing_page: "BILLING",
                brand_name: "TrueCostGG",
                user_action: "PAY_NOW",
                shipping_preference: "NO_SHIPPING",
                return_url: `${frontend.uri}/d2/checkout/paypal`,
                cancel_url: `${frontend.uri}/d2/checkout`,
            },
        });
        const response = await client.execute(request);

        const approval = response.result.links.filter((link: any) => link.rel === 'approve');
        assert(approval.length === 1, "paypal order failure (code: no approval)");
        return approval[0].href;
    }